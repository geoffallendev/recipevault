apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    alpha.image.policy.openshift.io/resolve-names: '*'
    app.openshift.io/route-disabled: "false"
    image.openshift.io/triggers: '[{"from":{"kind":"ImageStreamTag","name":"rest-recipe:latest"},"fieldPath":"spec.template.spec.containers[?(@.name==\"rest-recipe\")].image","pause":"false"}]'
    openshift.io/generated-by: OpenShiftWebConsole
  labels:
    app: rest-recipe
    app.kubernetes.io/component: rest-recipe
    app.kubernetes.io/instance: rest-recipe
    app.kubernetes.io/name: rest-recipe
    app.kubernetes.io/part-of: recipevault
    app.openshift.io/runtime-namespace: recipevault
  name: rest-recipe
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rest-recipe
  template:
    metadata:
      labels:
        app: rest-recipe
        deploymentconfig: rest-recipe
      annotations:
        openshift.io/generated-by: OpenShiftWebConsole
    spec:
      containers:
        - name: rest-recipe
          image: quay.io/geoallen/rest-recipe
          ports:
            - containerPort: 8080
              protocol: TCP
          env:
            - name: bucket.name
              valueFrom:
                configMapKeyRef:
                  name: recipevault-images
                  key: BUCKET_NAME
            - name: quarkus.s3.aws.credentials.static-provider.access-key-id
              valueFrom:
                secretKeyRef:
                  name: recipevault-images
                  key: AWS_ACCESS_KEY_ID
            - name: quarkus.s3.aws.credentials.static-provider.secret-access-key
              valueFrom:
                secretKeyRef:
                  name: recipevault-images
                  key: AWS_SECRET_ACCESS_KEY
            - name: quarkus.s3.aws.credentials.type
              value: static
            - name: quarkus.s3.endpoint-override
              value: http://
            - name: quarkus.s3.path-style-access
              value: 'true'
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: Always
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
